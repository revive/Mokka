                             New tag mokka-07-06
                             ===================

What is new in this Mokka release
=================================

   I. Bug fix in driver SField01
  II. MC Run Number added to the Run Header
 III. New Detector Model ILD_00_EcalSc02
  IV. First version of the SiLC framework
   V. New implementation for FTD using micro-strips
  VI. Improvements in AHcal (electronics)
 VII. New driver introducing services between TPC/Ecal/AHcal
VIII. New driver ClicYoke01 
  IX. Update of mokka version printed at start and in the GEAR and LCIO files
   X. New model ILD_01pre00
  XI. New model CLIC_ILD_CDR
 XII. New driver for TPC -- TPC10      
XIII. Run abort when reaching end of input file
 XIV. Corrections to drivers Yoke05 and Coil01.

=================================

Please note that:

1. This Mokka release co-works with Geant4 9.3.p02 and CLHEP 2.0.4.5
   (but it is still compatible with previous Geant4 / CLHEP versions)
   It was tested against GEAR v00-14-02 and gcc 3.4.6 and 4.1.2, 
   SL4 and SL5.


2. This Mokka release only co-works with LCIO v01-51 and is no longer 
   compatible with previous LCIO releases, due to changes in LCIO v01-51.

==============================


I. Bug fix in driver SField01

As reported by Andre Sailer, there was a logic error in the calculation of the
field in the return yoke in Mokka. This was fixed by taking into account 
magnetic flux conservation. Also, the saturation in iron is now taken into 
account by a new parameter ' Yoke_BField_cutoff ' that has the devault value 
1.5 Tesla and that can be changed in the steering file with the command:

/Mokka/init/globalModelParameter Yoke_BField_cutoff XXX


II. MC Run Number added to the Run Header

As requested by Andre Sailer, the Monte Carlo run number that is set by the 
steering command:

   /Mokka/init/mcRunNumber

was added to the RunHeader of the LCIO output file generated by Mokka. If not 
set, this parameter has the default value equal to zero.


III. New Detector Model ILD_00_EcalSc02

As requested by the users, a new model, ' ILD_00_EcalSc02'was created, 
that is the same als ILD_00, but with the old Ecal replaced by the 
Hybrid Ecal.

By default, the Ecal is equipped with only silicon layers. This can be changed 
in the steering file with the command:

/Mokka/init/globalModelParameter Ecal_Sc_Si_mix XXXXXXXXXXXXXXX

where the digits noted 'X' - one for every layer pair - can each have the 
values mentionned in file 

Mokka/ReleaseNotes/release_notes_mokka-07-04.


 IV. First version of the SiLC framework

Thanks to Alexandre Charpy and Konstantin Androsov, a first version of the 
SiLC framework has been committed. This one can manage the SET, SIT and the 
ETD sub-detectors. It is actually under testing.

 Geometry:

 About SIT/ETD:
- the distribution of the silicon modules are ready (single or double layer); 
gap between module are included.
- the support of the module is ready
- electronic is described
- the support barrel is partially describe. It depends of the TPC design and 
the global integration.  Totally depending of the mechanical engineer 
(INFN Turino, LLR, LAL).
- no overlapping detected for the moment

  It's possible to add some layer (example SIT through the steer file)

 About ETD:
- the distribution of the silicon modules are ready (XUV or XY version)
- the support of the module is ready
- the support is described
- electronic is described
- no overlapping detected for the moment

 More features is coming and have to be tested: module overlapping, module 
angle etc ....

 The ILD configuration should be stable at the end of October/ beginning of 
the November. In addition to, probably one has to write a new class for the
sensitvie module: TRKSiLCSi for example.

 GEAR:
- taking into account in the design pattern.
- have to be written according the GEAR design. Need to discuss for the futur
needs concerning the reconstruction.

 The driver names are, for the moment, "sit", "set" and "etd".


  V. New implementation for FTD using micro-strips

Thanks to Jordi Duarte, a preliminary mechanical design of the micro-strips 
disks  (4,5,6,7) defined as carbon fiber petals supporting 4 sensors pads 
(not defined yet the micro-strips), 16 petals per diks is implemented. The
the disk 3 (pixel technology) is converted into micro-strip technology 
(disk 3 is too big for pixels). Possibly another pixel disk between the 2 
and 3 will be added in the futur, to be studied. By the moment this drivers
implements 7 disk: 2 pixels + 5 microstrips. It includes :

 - Electronics and cabling in micro-strips sensors;
 - For the pixels disks: sensors, kapton and suports (right now the material 
support is Carbon fiber, must be foam, to be fixed);

The new driver name is SFtd06, which uses the ftd08 DB and is driven by the
super-driver SFtd09. The sub-detector has been checked for overlappings. 
Everything seems to be fine, both in its own construction and respect others 
subdetectors. 

 VI. Improvements in AHcal (electronics)

Thanks to Angela Lucaci, we have a first implementation of the electronics
inside the AHcal layers as it should be in the simulation: 
- the 5 mm scintillator + 1.5 mm air gap were replaced with 
     0.5 mm steel cassette
   + 3 mm scintillator
   + 0.7 mm PCB (FR4)
   + 0.1 mm Cu 
-two new materials were defined inside the AHcal new driver SHcalSc03:
 S235 (stainless steel) si PCB (FR-4)


VII. New driver introducing services between TPC/Ecal/AHcal

A new driver SServices00 was created that implements a first version of
services, supports, cables in the following regions:
-close to the TPC endplates, in the gap between TPC and EndCaps: cooling tubes,
 vapour return and liquid supply
-in the barrel region, in the gap between the Ecal and Hcal: rails, electronics,
 cables, cooling
-in the gap between Ecal endcap and barrel: services from Ecal and part of TPC
					services
-in the gap between Hcal endcap and barrel: services from Ecal, Hcal and part
					of TPC services

For more details please see the description at:
http://llr.in2p3.fr/~musat/Services/services.pptx


VIII. New driver ClicYoke01 

A new driver ClicYoke01 by Angela Isabela Lucaci Timoce, where the yoke 
starts with a sensitive layer in the barrel, as well as a different layering 
for the Yoke Plug, which contains a single sensitive layer. It co-works with
the almost final version of CLIC_ILD detector for the CLIC CDR, in DB.


  IX. Update of mokka version printed at start and in the GEAR and LCIO files

  The Mokka version (tag, branch or trunk) is now correctly printed at start
time and in the LCIO and GEAR files.

   X. New model ILD_01pre00

This Mokka release implements the new model ILD_01pre00, a first step towards
the ILD_01 model which should be used for the DBD studies. The ingredients for
ILD_01pre00 are, for the moment, in build order :

 vxd05 - VXD for ILD
 SEcal03p01 - A scalable ILD Ecal mixing Si and/or scintillator
 SLcal03 - LumiCal improved geometry driver
 SHcalSc03 - SHcalSc02 with electronics inside
 LHcal01 - A first LHcal implementation, as a W/Si calorimeter
 tubeX02 -Beam tube for the ILD
 maskX02 - Forward mask for the ILD
 tpc10_01 - Pad-row-based TPC with Endplate of 25 percent X0
 SSit04 - Sit from SiLC
 SFtd09 - First mechanical design with micro-strips (disks 3,4,5,6,7) and pixel
(disks 1,2) technologies by Jordi Duarte.
 SSet03 - Self Scaling SET from SiLC
 SEtd03 - ETD by SiLC
 SCoil03 - Coil using Coil Cryostat with detector instrumentation by Saveliev
 yoke05 -  new Muon System by Saveliev
 BeamCal08 - New BeamCal driver by Andre Sailer
 SField01- A super field depending on the coil and yoke parameters.
 SServices00 - Driver implementing services (cables, cooling, etc) for ILD models


  XI. New model CLIC_ILD_CDR

This should be the final detector version for the CLIC CDR, i.e. the detector
model is frozen now.


 XII. New driver and sensitive detector for TPC -- TPC10 & TPCSD04

The driver is an evolution of the previous TPC drivers, with the addition of 
layered inner and outer walls. For backwards compatibility the material 
properties TPCWallProperties have been set to those of the inner wall. 
In future the reconstruction should use the more applicable 
TPCInnerWallProperties and TPCOuterWallProperties. The properties are take 
from a material mix containing the corresponding material fractions of the 
layers. The readout plane has been placed inside the sensitive gas volume 
inline with the current LC-TPC design.

More control added for TPC Low pt hits. A new TPC sensitive detector has 
been added, TPCSD04, which is used by TPC10. In this sensitive detector 
TPCCut is no longer used. Instead the steering parameter "TPCLowPtCut" 
should now be used (formely "TPCLowPtStepLimitCut"). 
The steering parameter "TPCLowPtHitSeparation" has also been changed to 
"TPCLowPtMaxHitSeparation". An additional steering parameter 
"TPCLowPtStoreMCPForHits" has been added which controls whether the 
MCParticles for these low Pt hits are added to the LCIO collection of 
MCParticles.


XIII. Run abort when reaching end of input file

As requested by the users, Mokka does no longer abort when the number of evts 
in the input file is less than the number of events in the beamOn command.
Only the current run is aborted, and then the program returns to the Idle> 
prompt.


 XIV. Corrections to drivers Yoke05 and Coil01.

Thanks to Valeri Saveliev, we have available corrections in the calculation of
the z-position of the hits in the yoke barrel and in the calculation of the 
yoke plug thickness (drivers Yoke05 and Coil01).

