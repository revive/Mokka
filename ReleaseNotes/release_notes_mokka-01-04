
                    New tag mokka-01-04
                    ===================

What is new in this new Mokka release
=====================================

  I  - Geant4, CLHEP and gcc updates
 II  - New prototype models including Ecal and Hcal prototypes
III  - P66WNominal and P66WNominal_45 reference databases
 IV  - Hcal "first approach" prototype
  V  - SinglehcalFeRPC1 and SinglehcalFeScintillator databases
 VI  - General review and fixes in the Ecal proto01 driver
VII  - Fix in a MySQL query in Hcal03.cc code
VIII - Intermediate particles in Pythia input files


I - Geant4, CLHEP and gcc updates

 Several cosmetics and backward compatibles fixes in the Mokka code 
to become compliant with Geant4 release 5.0, gcc release 3.2 and 
CLHEP release 1.8.0.0. (thanks to Gabriel Musat)

>>> Geometry driver developpers, be careful: all resgitered sensitive 
detectors are now automaticaly deleted by the Geant4 kernel when 
leaving the application. So a major fix to agree with this new Geant4 
release is to avoid to delete sensitive detectors when deleting 
the geometry driver! (PCMF)


II - New prototype models including Ecal and Hcal prototypes:

  ProtoEcalHcalRPC 
  ProtoEcalHcalRPC_45
  ProtoEcalHcalScintillator
  ProtoEcalHcalScintillator_45

 These new  models build both the Ecal and the Hcal prototypes in the 
same job, placing it correctly for simulations.  For a full description 
of these models, please, see the URL:

 http://polype.in2p3.fr/geant4/tesla/www/mokka/prototype/proto.html

III -  P66WNominal and P66WNominal_45 reference databases

 Indeed the real Ecal prototype details still evolve, the P66WNominal 
database values are now as near as possible of it. All the W plates
are set to the ideal values, indeed the proto01 is able to simulate
the true mesured W thickness for each plate if available.

 The only difference between P66WNominal and P66WNominal_45 is that
in the P66WNominal_45 the slabs are shifted to fire in angle.

IV - Hcal "first approach" prototype

 A simple Hcal prototype is available thanks to the new
SinglehcalFeRPC1 database. It's hcal03 driver complient, it means,
the same software which build the Hcal detector geometry is able
to build the Hcal prototype module too. As small fix was necessary in 
the hcal03 driver code to accept to build just one module. So to build
the Hcal prototype you have to get this new Mokka release.


V - SinglehcalFeRPC1 and SinglehcalFeScintillator databases

 These both databases are hcalFeRPC1 and hcalFeScintillator 
"clones" to describe just a cubic Hcal barrel module. The base
of this cube is 1 m2 wide.

VI - General review and fixes in the Ecal proto01 driver:

 1.1) The x_center, y_center and z_center fields in the Ecal 
prototype databases specify where to place the Ecal prototype
module in the detector room.
 1.2) The ProtoSD::LoadEvent(FILE*) is now implemented: it enables
to reload the output data for visualization.
 1.3) Fixed the dead W plate placements to avoid overlaps if
the model has several towers.
 1.4) Fixed the fiber thickness calculation when building the
prototype.

VII - Fix in a MySQL query in Hcal03.cc code

 Thanks to Frank Gaedes, a small fix in a MySQL query to keep it
compatible with MySQL release 3.22.

VIII - Intermediate particles in Pythia input files

 Primaries with ISTHEP(IHEP) <> 1 in the Pythia input file
are now accepted but ignored, as described in the Geant4 documentation:

 "If the parent particle is an "intermediate" particle, which Geant4 does 
not have a corresponding G4ParticleDefinition, this parent particle is 
ignored and daughters are assumed to start from the vertex with which their 
parent is associated. For example, a Z boson is associated with a vertex 
and it has positive and negative muons as its daughters, these muons will 
start from that vertex. 
 There are some kinds of particles which should fly some reasonable 
distances and, thus, should be simulated by Geant4, but you still want 
to follow the decay channel generated by an event generator. A typical 
case of these particles is B meson. Even for the case of a primary particle 
which has a corresponding G4ParticleDefinition, it can have daughter primary 
particles. Geant4 will trace the parent particle until it comes to decay, 
obeying multiple scattering, ionization loss, rotation with the magnetic 
field, etc. according to its particle type. When the parent comes to decay, 
instead of randomly choosing its decay channel, it follows the "pre-assigned" 
decay channel. To conserve the energy and the momentum of the parent, 
daughters will be Lorentz transformed according to their parent's frame."

(Geant4 User's Guide For Application Developers - Toolkit Fundamentals)

=====================================
To be done:
==========
(just to not forget and not in this order)

1) Mokka Kernel

- review for the Control class: it should be implemented as 
  singleton and to keep the actual static members as attributs

2) Persistency

- to implement the Root Tree file format option;
- to implement the SIO file format option.

3) Simple Event Display

- to implement track and hits selection commands for display.
- to implement sub-detector selection command for display.
- to implement run time color selection commands.
- to implement a graphic interface to short cut the Geant4 
  visualization commands syntax.

Dependencies:
 This Mokka release was tested with the following environments:
1) Linux RedHat 7.3, gcc 3.2, CLHEP 1.8.0.0, 
   Geant4 5.0, MySQL 3.23.49
2) Linux RedHat 6.2, gcc 2.95.3, CLHEP 1.7.0.0,
   Geant4 geant4-05-00-ref-00, MySQL 3.23.43

  but it should be backward compatible.

Known bugs:
- After geant4-03-02-ref-07 release the polylines are not more rendered 
  at all on the screen if using the Geant4 OpenGL driver. To turn around
  the proto hits are drawn as dots.
- After some releases the Geant4 OpenGL driver is not more able to 
  render on the screen part of the Ecal boolean volumes. You'll get
  several warnings on the geant4 console at render time. Don't matter,
  the volumes are there!
===> This problem was officially comunnicated to the Geant4 visualization
     team with simple examples <============

